<!doctype html>
<html>
<head>
    <title>IRCHelp.org &mdash; Untitled Page</title>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
    <meta name="description" content="Comprehensive information on everything Internet Relay Chat" />
    <meta name="author" content="irchelpers" />
    <meta name="generator" content="PieCrust 1.3.0-dev" />
    <meta name="template-engine" content="Twig" />
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width,
      initial-scale=1.0">
    <!-- Le styles -->
    <link href="/css/bootstrap.css" rel="stylesheet">
    <style type="text/css">
      body {
        padding-top: 60px;
        padding-bottom: 40px;
      }
    </style>
    <link href="/css/bootstrap-responsive.css" rel="stylesheet">
    <!-- HTML5 shim, for IE6-8 support of HTML5 elements -->
    <!--[if lt IE 9]>
      <script src="http://html5shim.googlecode.com/svn/trunk/html5.js"></script>
    <![endif]-->
    <!-- Fav and touch icons -->
    <link rel="apple-touch-icon-precomposed" sizes="144x144"
      href="/ico/apple-touch-icon-144-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="114x114"
      href="/ico/apple-touch-icon-114-precomposed.png">
    <link rel="apple-touch-icon-precomposed" sizes="72x72"
      href="/ico/apple-touch-icon-72-precomposed.png">
    <link rel="apple-touch-icon-precomposed"
      href="/ico/apple-touch-icon-57-precomposed.png">
    <link rel="shortcut icon" href="/ico/favicon.png">
</head>
<body>
    <!--Start of navigation-->
    <div class="navbar navbar-inverse navbar-fixed-top">
      <div class="navbar-inner">
        <div class="container"> <a class="btn btn-navbar"
            data-toggle="collapse" data-target=".nav-collapse"> <span
              class="icon-bar"></span> <span class="icon-bar"></span> <span
              class="icon-bar"></span> </a> <a class="brand" href="/">#irchelp</a>
          <div class="nav-collapse collapse">
            <ul class="nav">
              <li class="active"><a href="/">Home</a></li>
              <li><a href="/irchelp/credit.html">About</a></li>
              <li class="dropdown"> <a href="/irchelp/clients" class="dropdown-toggle"
                  data-toggle="dropdown">Clients </a>
                <ul class="dropdown-menu">
                  <li><a href="/irchelp/clients">All Clients</a></li>
                  <li class="divider"></li>
                  <li class="nav-header">Windows</li>
                  <li><a href="/irchelp/clients/windows/mirc">mIRC</a></li>
                  <li><a href="/irchelp/clients/windows/xchat">XChat</a></li>
                  <li><a href="/irchelp/clients/windows">All Windows Clients</a></li>
                  <li class="divider"></li>
                  <li class="nav-header">MacOS X</li>
                  <li><a href="/irchelp/clients/mac/textual.html">Textual</a></li>
                  <li><a href="/irchelp/clients/mac/colloquy.html">Colloquy</a></li>
                  <li><a href="/irchelp/clients/mac/snak.html">Snak</a></li>
                  <li><a href="/irchelp/clients/mac">All MacOS X Clients</a></li>
                  <li class="divider"></li>
                  <li class="nav-header">Linux/Unix Terminal</li>
                  <li><a href="/irchelp/clients/unix/irssi">irssi</a></li>
                  <li><a href="/irchelp/clients/unix/epic.html">EPIC</a></li>
                  <li><a href="/irchelp/clients/unix/ircii">ircII</a></li>
                  <li><a href="/irchelp/clients/unix/index.html#terminal">All Linux/Unix Terminal Clients</a></li>
                  <li class="divider"></li>
                  <li class="nav-header">Linux/Unix Graphical</li>
                  <li><a href="/irchelp/clients/unix/xchat.html">XChat</a></li>
                  <li><a href="/irchelp/clients/unix/konversation.html">Konversation</a></li>
                  <li><a href="/irchelp/clients/unix/index.html#gui">All Linux/Unix Graphical Clients</a></li>
                  <li class="nav-header">Smartphones</li>
                  <li><a href="/irchelp/clients/mobile/android">Clients for Android</a></li>
                  <li><a href="/irchelp/clients/mobile/ios">Clients for iOS</a></li>
                  <li><a href="/irchelp/clients/mobile">All Smartphone Clients</a></li>
                  <li class="nav-header">Other OS and Crossplatform</li>
                  <li><a href="/irchelp/clients/cross/java">Clients writting in Java</a></li>
                  <li><a href="/irchelp/clients/cross">Other Crossplatform Clients</a></li>
                  <li><a href="/irchelp/clients/otheros">Clients for other Operating Systems</a></li>
                  <li><a href="/irchelp/clients/webclients.html">Web-based clients</a></li>

                </ul>
              </li>
              <li class="dropdown"> <a href="/irchelp/networks" class="dropdown-toggle"
                  data-toggle="dropdown">Networks </a>
                <ul class="dropdown-menu">
                  <li><a href="/irchelp/networks/popular.html">Major Networks</a></li>
                  <li><a href="/irchelp/networks/regional.html">Regional Networks</a></li>
                  <li><a href="/irchelp/networks/topical.html">Topical Networks</a></li>
                  <li><a href="/irchelp/networks">All Networks</a></li>
                  <li class="divider"></li>
                  <li class="nav-header">Major Networks</li>
                  <li><a href="/irchelp/networks/efnet/">EFNet</a></li>
                  <li><a href="/irchelp/networks/ircnet.html">IRCnet</a></li>
                  <li><a href="/irchelp/networks/undernet.html">Undernet</a></li>
                  <li><a href="/irchelp/networks/dalnet.html">Dalnet</a></li>
                  <li><a href="/irchelp/networks/quakenet.html">Quakenet</a></li>
                  <li><a href="/irchelp/networks/freenode.html">Freenode</a></li>
                </ul>
              </li>
              <li class="dropdown"> <a href="/irchelp/security" class="dropdown-toggle"
                  data-toggle="dropdown">Security </a>
                <ul class="dropdown-menu">
                  <li><a href="/irchelp/security">General Security</a></li>
                  <li><a href="/irchelp/security/privacy.html">Privacy</a></li>
                  <li><a href="/irchelp/security/nuke.html">Denial of Service</a></li>
                  <li><a href="/irchelp/security/trojan.html">Trojan Horses and Other Malware</a></li>
                  <li><a href="/irchelp/security/socialeng.html">Social Engineering</a></li>
                </ul>
              </li>
              <li class="dropdown"> <a href="/irchelp/ircd" class="dropdown-toggle"
                  data-toggle="dropdown">Servers </a>
                <ul class="dropdown-menu">
                  <li><a href="/irchelp/ircd">General ircd information</a></li>
                  <li class="divider"></li>
                  <li class="nav-header">EFNet IRCDs</li>
                  <li><a href="/irchelp/ircd/ratbox">ircd-ratbox</a></li>
                  <li><a href="/irchelp/ircd/hybrid">ircd-hybrid</a></li>
                </ul>
              </li>
              <li class="dropdown"> <a href="#" class="dropdown-toggle"
                  data-toggle="dropdown">FAQs </a>
                <ul class="dropdown-menu">
                  <li><a href="/irchelp/new2irc.html">New user introduction</a></li>
<!--
                  <li><a href="#">Another action</a></li>
                  <li><a href="#">Something else here</a></li>
                  <li class="divider"></li>
                  <li class="nav-header">Nav header</li>
                  <li><a href="#">Separated link</a></li>
                  <li><a href="#">One more separated link</a></li>
-->
                </ul>
              </li>
              <li class="dropdown"> <a href="/irchelp/library.html" class="dropdown-toggle"
                  data-toggle="dropdown">Library </a>
                <ul class="dropdown-menu">
                  <li><a href="/irchelp/library.html">Index</a></li>
<!--
                  <li><a href="#">Another action</a></li>
                  <li><a href="#">Something else here</a></li>
                  <li class="divider"></li>
                  <li class="nav-header">Nav header</li>
                  <li><a href="#">Separated link</a></li>
                  <li><a href="#">One more separated link</a></li>
-->
                </ul>
              </li>
            </ul>
            <form class="navbar-form pull-right"> <input class="span2"
                placeholder="Search" type="text"> <button type="submit"
                class="btn">Search</button> </form>
          </div>
          <!--/.nav-collapse --> </div>
      </div>
    </div>
<!--end of navigation-->

    <div id="container" class="container">
<!--
                        <h1><a href="/">Untitled Page</a></h1>
            -->        
        
            <div class="content">
                                <p>Network Working Group                                            C. Kalt
Request for Comments: 2811                                    April 2000
Updates: 1459
Category: Informational</p>

<pre><code>            Internet Relay Chat: Channel Management
</code></pre>

<p>Status of this Memo</p>

<p>This memo provides information for the Internet community.  It does
   not specify an Internet standard of any kind.  Distribution of this
   memo is unlimited.</p>

<p>Copyright Notice</p>

<p>Copyright (C) The Internet Society (2000).  All Rights Reserved.</p>

<p>Abstract</p>

<p>One of the most notable characteristics of the IRC (Internet Relay
   Chat) protocol is to allow for users to be grouped in forums, called
   channels, providing a mean for multiple users to communicate
   together.</p>

<p>There was originally a unique type of channels, but with the years,
   new types appeared either as a response to a need, or for
   experimental purposes.</p>

<p>This document specifies how channels, their characteristics and
   properties are managed by IRC servers.</p>

<p>Table of Contents</p>

<ol>
<li>Introduction &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..   2</li>
<li>Channel Characteristics &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;   3
  2.1  Namespace &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.   3
  2.2  Channel Scope &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;   3
  2.3  Channel Properties &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.   4
  2.4  Privileged Channel Members &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..   4
     2.4.1  Channel Operators &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;   5
     2.4.2  Channel Creator &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..   5</li>
<li>Channel lifetime &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.   5
  3.1  Standard channels &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..   5
  3.2  Safe Channels &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;   6</li>
<li>Channel Modes &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.   7
  4.1  Member Status &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;   7
     4.1.1  &#8220;Channel Creator&#8221; Status &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..   7</li>
</ol>

<p>Kalt                         Informational                      [Page 1]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<pre><code>     4.1.2  Channel Operator Status ...........................   8
     4.1.3  Voice Privilege ...................................   8
  4.2  Channel Flags ..........................................   8
     4.2.1  Anonymous Flag ....................................   8
     4.2.2  Invite Only Flag ..................................   8
     4.2.3  Moderated Channel Flag ............................   9
     4.2.4  No Messages To Channel From Clients On The Outside    9
     4.2.5  Quiet Channel .....................................   9
     4.2.6  Private and Secret Channels .......................   9
     4.2.7  Server Reop Flag ..................................  10
     4.2.8  Topic .............................................  10
     4.2.9  User Limit ........................................  10
     4.2.10  Channel Key ......................................  10
  4.3  Channel Access Control .................................  10
     4.3.1  Channel Ban and Exception .........................  11
     4.3.2  Channel Invitation ................................  11
</code></pre>

<p>5.  Current Implementations &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;  11
      5.1  Tracking Recently Used Channels &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;  11
      5.2  Safe Channels &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;  12
         5.2.1  Channel Identifier &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..  12
         5.2.2  Channel Delay &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.  12
         5.2.3  Abuse Window &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..  13
         5.2.4  Preserving Sanity In The Name Space &#8230;&#8230;&#8230;&#8230;&#8230;  13
         5.2.5  Server Reop Mechanism &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..  13
   6.  Current problems &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.  14
      6.1  Labels &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.  14
         6.1.1  Channel Delay &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.  14
         6.1.2  Safe Channels &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.  15
      6.2  Mode Propagation Delays &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..  15
      6.3  Collisions And Channel Modes &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;  15
      6.4  Resource Exhaustion &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;  16
   7.  Security Considerations &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;  16
      7.1  Access Control &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..  16
      7.2  Channel Privacy &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.  16
      7.3 Anonymity &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..  17
   8.  Current support and availability &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;  17
   9.  Acknowledgements &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;.  17
   10. References &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;   18
   11. Author&#8217;s Address &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;   18
   12. Full Copyright Statement &#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;&#8230;..  19</p>

<ol>
<li><p>Introduction</p>

<p>This document defines in detail on how channels are managed by the
IRC servers and will be mostly useful to people working on
implementing an IRC server.</p></li>
</ol>

<p>Kalt                         Informational                      [Page 2]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>While the concepts defined here are an important part of IRC, they
   remain non essential for implementing clients.  While the trend seems
   to be towards more and more complex and &#8220;intelligent&#8221; clients which
   are able to take advantage of knowing the internal workings of
   channels to provide the users with a more friendly interface, simple
   clients can be implemented without reading this document.</p>

<p>Many of the concepts defined here were designed with the IRC
   architecture [IRC-ARCH] in mind and mostly make sense in this
   context.  However, many others could be applied to other
   architectures in order to provide forums for a conferencing system.</p>

<p>Finally, it is to be noted that IRC users may find some of the
   following sections of interest, in particular sections 2 (Channel
   Characteristics) and 4 (Channel Modes).</p>

<ol>
<li><p>Channel Characteristics</p>

<p>A channel is a named group of one or more users which will all
receive messages addressed to that channel.  A channel is
characterized by its name, properties and current members.</p></li>
</ol>

<p>2.1 Namespace</p>

<p>Channels names are strings (beginning with a &#8216;&amp;&#8217;, &#8216;#&#8217;, &#8216;+&#8217; or &#8216;!&#8217;
   character) of length up to fifty (50) characters.  Channel names are
   case insensitive.</p>

<p>Apart from the the requirement that the first character being either
   &#8216;&amp;&#8217;, &#8216;#&#8217;, &#8216;+&#8217; or &#8216;!&#8217; (hereafter called &#8220;channel prefix&#8221;). The only
   restriction on a channel name is that it SHALL NOT contain any spaces
   (&#8217; &#8216;), a control G (^G or ASCII 7), a comma (&#8216;,&#8217; which is used as a
   list item separator by the protocol).  Also, a colon (&#8216;:&#8217;) is used as
   a delimiter for the channel mask.  The exact syntax of a channel name
   is defined in &#8220;IRC Server Protocol&#8221; [IRC-SERVER].</p>

<p>The use of different prefixes effectively creates four (4) distinct
   namespaces for channel names.  This is important because of the
   protocol limitations regarding namespaces (in general).  See section
   6.1 (Labels) for more details on these limitations.</p>

<p>2.2 Channel Scope</p>

<p>A channel entity is known by one or more servers on the IRC network.
   A user can only become member of a channel known by the server to
   which the user is directly connected.  The list of servers which know</p>

<p>Kalt                         Informational                      [Page 3]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>of the existence of a particular channel MUST be a contiguous part of
   the IRC network, in order for the messages addressed to the channel
   to be sent to all the channel members.</p>

<p>Channels with &#8216;&amp;&#8217; as prefix are local to the server where they are
   created.</p>

<p>Other channels are known to one (1) or more servers that are
   connected to the network, depending on the channel mask:</p>

<pre><code>  If there is no channel mask, then the channel is known to all
  the servers.

  If there is a channel mask, then the channel MUST only be known
  to servers which has a local user on the channel, and to its
  neighbours if the mask matches both the local and neighbouring
  server names.  Since other servers have absolutely no knowledge of
  the existence of such a channel, the area formed by the servers
  having a name matching the mask has to be contiguous for the
  channel to be known by all these servers.  Channel masks are best
  used in conjunction with server hostmasking [IRC-SERVER].
</code></pre>

<p>2.3 Channel Properties</p>

<p>Each channel has its own properties, which are defined by channel
   modes.  Channel modes can be manipulated by the channel members.  The
   modes affect the way servers manage the channels.</p>

<p>Channels with &#8216;+&#8217; as prefix do not support channel modes.  This means
   that all the modes are unset, with the exception of the &#8216;t&#8217; channel
   flag which is set.</p>

<p>2.4 Privileged Channel Members</p>

<p>In order for the channel members to keep some control over a channel,
   and some kind of sanity, some channel members are privileged.  Only
   these members are allowed to perform the following actions on the
   channel:</p>

<pre><code>    INVITE  - Invite a client to an invite-only channel (mode +i)
    KICK    - Eject a client from the channel
    MODE    - Change the channel's mode, as well as
              members' privileges
    PRIVMSG - Sending messages to the channel (mode +n, +m, +v)
    TOPIC   - Change the channel topic in a mode +t channel
</code></pre>

<p>Kalt                         Informational                      [Page 4]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>2.4.1 Channel Operators</p>

<p>The channel operators (also referred to as a &#8220;chop&#8221; or &#8220;chanop&#8221;) on a
   given channel are considered to &#8216;own&#8217; that channel.  Ownership of a
   channel is shared among channel operators.</p>

<p>Channel operators are identified by the &#8216;@&#8217; symbol next to their
   nickname whenever it is associated with a channel (i.e., replies to
   the NAMES, WHO and WHOIS commands).</p>

<p>Since channels starting with the character &#8216;+&#8217; as prefix do not
   support channel modes, no member can therefore have the status of
   channel operator.</p>

<p>2.4.2 Channel Creator</p>

<p>A user who creates a channel with the character &#8216;!&#8217; as prefix is
   identified as the &#8220;channel creator&#8221;.  Upon creation of the channel,
   this user is also given channel operator status.</p>

<p>In recognition of this status, the channel creators are endowed with
   the ability to toggle certain modes of the channel which channel
   operators may not manipulate.</p>

<p>A &#8220;channel creator&#8221; can be distinguished from a channel operator by
   issuing the proper MODE command.  See the &#8220;IRC Client Protocol&#8221;
   [IRC-CLIENT] for more information on this topic.</p>

<ol>
<li><p>Channel lifetime</p>

<p>In regard to the lifetime of a channel, there are typically two
groups of channels: standard channels which prefix is either &#8216;&amp;&#8217;, &#8216;#&#8217;
or &#8216;+&#8217;, and &#8220;safe channels&#8221; which prefix is &#8216;!&#8217;.</p></li>
</ol>

<p>3.1 Standard channels</p>

<p>These channels are created implicitly when the first user joins it,
   and cease to exist when the last user leaves it.  While the channel
   exists, any client can reference the channel using the name of the
   channel.</p>

<p>The user creating a channel automatically becomes channel operator
   with the notable exception of channels which name is prefixed by the
   character &#8216;+&#8217;, see section 4 (Channel modes).  See section 2.4.1
   (Channel Operators) for more details on this title.</p>

<p>Kalt                         Informational                      [Page 5]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>In order to avoid the creation of duplicate channels (typically when
   the IRC network becomes disjoint because of a split between two
   servers), channel names SHOULD NOT be allowed to be reused by a user
   if a channel operator (See Section 2.4.1 (Channel Operators)) has
   recently left the channel because of a network split.  If this
   happens, the channel name is temporarily unavailable.  The duration
   while a channel remains unavailable should be tuned on a per IRC
   network basis.  It is important to note that this prevents local
   users from creating a channel using the same name, but does not
   prevent the channel to be recreated by a remote user. The latter
   typically happens when the IRC network rejoins.  Obviously, this
   mechanism only makes sense for channels which name begins with the
   character &#8216;#&#8217;, but MAY be used for channels which name begins with
   the character &#8216;+&#8217;.  This mechanism is commonly known as &#8220;Channel
   Delay&#8221;.</p>

<p>3.2 Safe Channels</p>

<p>Unlike other channels, &#8220;safe channels&#8221; are not implicitly created.  A
   user wishing to create such a channel MUST request the creation by
   sending a special JOIN command to the server in which the channel
   identifier (then unknown) is replaced by the character &#8216;!&#8217;.  The
   creation process for this type of channel is strictly controlled.
   The user only chooses part of the channel name (known as the channel
   &#8220;short name&#8221;), the server automatically prepends the user provided
   name with a channel identifier consisting of five (5) characters.
   The channel name resulting from the combination of these two elements
   is unique, making the channel safe from abuses based on network
   splits.</p>

<p>The user who creates such a channel automatically becomes &#8220;channel
   creator&#8221;.  See section 2.4.2 (Channel Creator) for more details on
   this title.</p>

<p>A server MUST NOT allow the creation of a new channel if another
   channel with the same short name exists; or if another channel with
   the same short name existed recently AND any of its member(s) left
   because of a network split.  Such channel ceases to exist after last
   user leaves AND no other member recently left the channel because of
   a network split.</p>

<p>Unlike the mechanism described in section 5.2.2 (Channel Delay), in
   this case, channel names do not become unavailable: these channels
   may continue to exist after the last user left.  Only the user
   creating the channel becomes &#8220;channel creator&#8221;, users joining an
   existing empty channel do not automatically become &#8220;channel creator&#8221;
   nor &#8220;channel operator&#8221;.</p>

<p>Kalt                         Informational                      [Page 6]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>To ensure the uniqueness of the channel names, the channel identifier
   created by the server MUST follow specific rules.  For more details
   on this, see section 5.2.1 (Channel Identifier).</p>

<ol>
<li><p>Channel Modes</p>

<p>The various modes available for channels are as follows:</p>

<pre><code>O - give "channel creator" status;
o - give/take channel operator privilege;
v - give/take the voice privilege;

a - toggle the anonymous channel flag;
i - toggle the invite-only channel flag;
m - toggle the moderated channel;
n - toggle the no messages to channel from clients on the
    outside;
q - toggle the quiet channel flag;
p - toggle the private channel flag;
s - toggle the secret channel flag;
r - toggle the server reop channel flag;
t - toggle the topic settable by channel operator only flag;

k - set/remove the channel key (password);
l - set/remove the user limit to channel;

b - set/remove ban mask to keep users out;
e - set/remove an exception mask to override a ban mask;
I - set/remove an invitation mask to automatically override
    the invite-only flag;
</code></pre>

<p>Unless mentioned otherwise below, all these modes can be manipulated
by &#8220;channel operators&#8221; by using the MODE command defined in &#8220;IRC
Client Protocol&#8221; [IRC-CLIENT].</p></li>
</ol>

<p>4.1 Member Status</p>

<p>The modes in this category take a channel member nickname as argument
   and affect the privileges given to this user.</p>

<p>4.1.1 &#8220;Channel Creator&#8221; Status</p>

<p>The mode &#8216;O&#8217; is only used in conjunction with &#8220;safe channels&#8221; and
   SHALL NOT be manipulated by users.  Servers use it to give the user
   creating the channel the status of &#8220;channel creator&#8221;.</p>

<p>Kalt                         Informational                      [Page 7]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>4.1.2 Channel Operator Status</p>

<p>The mode &#8216;o&#8217; is used to toggle the operator status of a channel
   member.</p>

<p>4.1.3 Voice Privilege</p>

<p>The mode &#8216;v&#8217; is used to give and take voice privilege to/from a
   channel member.  Users with this privilege can talk on moderated
   channels.  (See section 4.2.3 (Moderated Channel Flag).</p>

<p>4.2 Channel Flags</p>

<p>The modes in this category are used to define properties which
   affects how channels operate.</p>

<p>4.2.1 Anonymous Flag</p>

<p>The channel flag &#8216;a&#8217; defines an anonymous channel.  This means that
   when a message sent to the channel is sent by the server to users,
   and the origin is a user, then it MUST be masked.  To mask the
   message, the origin is changed to &#8220;anonymous!anonymous@anonymous.&#8221;
   (e.g., a user with the nickname &#8220;anonymous&#8221;, the username &#8220;anonymous&#8221;
   and from a host called &#8220;anonymous.&#8221;).  Because of this, servers MUST
   forbid users from using the nickname &#8220;anonymous&#8221;.  Servers MUST also
   NOT send QUIT messages for users leaving such channels to the other
   channel members but generate a PART message instead.</p>

<p>On channels with the character &#8216;&amp;&#8217; as prefix, this flag MAY be
   toggled by channel operators, but on channels with the character &#8216;!&#8217;
   as prefix, this flag can be set (but SHALL NOT be unset) by the
   &#8220;channel creator&#8221; only.  This flag MUST NOT be made available on
   other types of channels.</p>

<p>Replies to the WHOIS, WHO and NAMES commands MUST NOT reveal the
   presence of other users on channels for which the anonymous flag is
   set.</p>

<p>4.2.2 Invite Only Flag</p>

<p>When the channel flag &#8216;i&#8217; is set, new members are only accepted if
   their mask matches Invite-list (See section 4.3.2) or they have been
   invited by a channel operator.  This flag also restricts the usage of
   the INVITE command (See &#8220;IRC Client Protocol&#8221; [IRC-CLIENT]) to
   channel operators.</p>

<p>Kalt                         Informational                      [Page 8]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>4.2.3 Moderated Channel Flag</p>

<p>The channel flag &#8216;m&#8217; is used to control who may speak on a channel.
   When it is set, only channel operators, and members who have been
   given the voice privilege may send messages to the channel.</p>

<pre><code>  This flag only affects users.
</code></pre>

<p>4.2.4 No Messages To Channel From Clients On The Outside</p>

<p>When the channel flag &#8216;n&#8217; is set, only channel members MAY send
   messages to the channel.</p>

<pre><code>  This flag only affects users.
</code></pre>

<p>4.2.5 Quiet Channel</p>

<p>The channel flag &#8216;q&#8217; is for use by servers only.  When set, it
   restricts the type of data sent to users about the channel
   operations: other user joins, parts and nick changes are not sent.
   From a user&#8217;s point of view, the channel contains only one user.</p>

<p>This is typically used to create special local channels on which the
   server sends notices related to its operations.  This was used as a
   more efficient and flexible way to replace the user mode &#8216;s&#8217; defined
   in RFC 1459 [IRC].</p>

<p>4.2.6 Private and Secret Channels</p>

<p>The channel flag &#8216;p&#8217; is used to mark a channel &#8220;private&#8221; and the
   channel flag &#8216;s&#8217; to mark a channel &#8220;secret&#8221;.  Both properties are
   similar and conceal the existence of the channel from other users.</p>

<p>This means that there is no way of getting this channel&#8217;s name from
   the server without being a member.  In other words, these channels
   MUST be omitted from replies to queries like the WHOIS command.</p>

<p>When a channel is &#8220;secret&#8221;, in addition to the restriction above, the
   server will act as if the channel does not exist for queries like the
   TOPIC, LIST, NAMES commands.  Note that there is one exception to
   this rule: servers will correctly reply to the MODE command.
   Finally, secret channels are not accounted for in the reply to the
   LUSERS command (See &#8220;Internet Relay Chat: Client Protocol&#8221; [IRC-
   CLIENT]) when the <mask> parameter is specified.</p>

<p>Kalt                         Informational                      [Page 9]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>The channel flags &#8216;p&#8217; and &#8216;s&#8217; MUST NOT both be set at the same time.
   If a MODE message originating from a server sets the flag &#8216;p&#8217; and the
   flag &#8216;s&#8217; is already set for the channel, the change is silently
   ignored.  This should only happen during a split healing phase
   (mentioned in the &#8220;IRC Server Protocol&#8221; document [IRC-SERVER]).</p>

<p>4.2.7 Server Reop Flag</p>

<p>The channel flag &#8216;r&#8217; is only available on channels which name begins
   with the character &#8216;!&#8217; and MAY only be toggled by the &#8220;channel
   creator&#8221;.</p>

<p>This flag is used to prevent a channel from having no channel
   operator for an extended period of time.  When this flag is set, any
   channel that has lost all its channel operators for longer than the
   &#8220;reop delay&#8221; period triggers a mechanism in servers to reop some or
   all of the channel inhabitants.  This mechanism is described more in
   detail in section 5.2.4 (Channel Reop Mechanism).</p>

<p>4.2.8 Topic</p>

<p>The channel flag &#8216;t&#8217; is used to restrict the usage of the TOPIC
   command to channel operators.</p>

<p>4.2.9 User Limit</p>

<p>A user limit may be set on channels by using the channel flag &#8216;l&#8217;.
   When the limit is reached, servers MUST forbid their local users to
   join the channel.</p>

<p>The value of the limit MUST only be made available to the channel
   members in the reply sent by the server to a MODE query.</p>

<p>4.2.10 Channel Key</p>

<p>When a channel key is set (by using the mode &#8216;k&#8217;), servers MUST
   reject their local users request to join the channel unless this key
   is given.</p>

<p>The channel key MUST only be made visible to the channel members in
   the reply sent by the server to a MODE query.</p>

<p>4.3 Channel Access Control</p>

<p>The last category of modes is used to control access to the channel,
   they take a mask as argument.</p>

<p>Kalt                         Informational                     [Page 10]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>In order to reduce the size of the global database for control access
   modes set for channels, servers MAY put a maximum limit on the number
   of such modes set for a particular channel.  If such restriction is
   imposed, it MUST only affect user requests.  The limit SHOULD be
   homogeneous on a per IRC network basis.</p>

<p>4.3.1 Channel Ban and Exception</p>

<p>When a user requests to join a channel, his local server checks if
   the user&#8217;s address matches any of the ban masks set for the channel.
   If a match is found, the user request is denied unless the address
   also matches an exception mask set for the channel.</p>

<p>Servers MUST NOT allow a channel member who is banned from the
   channel to speak on the channel, unless this member is a channel
   operator or has voice privilege. (See Section 4.1.3 (Voice
   Privilege)).</p>

<p>A user who is banned from a channel and who carries an invitation
   sent by a channel operator is allowed to join the channel.</p>

<p>4.3.2 Channel Invitation</p>

<p>For channels which have the invite-only flag set (See Section 4.2.2
   (Invite Only Flag)), users whose address matches an invitation mask
   set for the channel are allowed to join the channel without any
   invitation.</p>

<ol>
<li><p>Current Implementations</p>

<p>The only current implementation of these rules as part of the IRC
protocol is the IRC server, version 2.10.</p>

<p>The rest of this section deals with issues that are mostly of
importance to those who wish to implement a server but some parts may
also be of interest for client writers.</p></li>
</ol>

<p>5.1 Tracking Recently Used Channels</p>

<p>This mechanism is commonly known as &#8220;Channel Delay&#8221; and generally
   only applies to channels which names is prefixed with the character
   &#8216;#&#8217; (See Section 3.1 &#8220;Standard channels&#8221;).</p>

<p>When a network split occurs, servers SHOULD keep track of which
   channels lost a &#8220;channel operator&#8221; as the result of the break.  These
   channels are then in a special state which lasts for a certain period
   of time.  In this particular state, the channels cannot cease to</p>

<p>Kalt                         Informational                     [Page 11]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>exist.  If all the channel members leave the channel, the channel
   becomes unavailable: the server local clients cannot join the channel
   as long as it is empty.</p>

<p>Once a channel is unavailable, it will become available again either
   because a remote user has joined the channel (most likely because the
   network is healing), or because the delay period has expired (in
   which case the channel ceases to exist and may be re-created).</p>

<p>The duration for which a channel death is delayed SHOULD be set
   considering many factors among which are the size (user wise) of the
   IRC network, and the usual duration of network splits.  It SHOULD be
   uniform on all servers for a given IRC network.</p>

<p>5.2 Safe Channels</p>

<p>This document introduces the notion of &#8220;safe channels&#8221;.  These
   channels have a name prefixed with the character &#8216;!&#8217; and great effort
   is made to avoid collisions in this name space.  Collisions are not
   impossible, however they are very unlikely.</p>

<p>5.2.1 Channel Identifier</p>

<p>The channel identifier is a function of the time.  The current time
   (as defined under UNIX by the number of seconds elapsed since
   00:00:00 GMT, January 1, 1970) is converted in a string of five (5)
   characters using the following base:
   &#8220;ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890&#8221; (each character has a decimal
   value starting from 0 for &#8216;A&#8217; to 35 for &#8216;0&#8217;).</p>

<p>The channel identifier therefore has a periodicity of 36^5 seconds
   (about 700 days).</p>

<p>5.2.2 Channel Delay</p>

<p>These channels MUST be subject to the &#8220;channel delay&#8221; mechanism
   described in section 5.1 (Channel Delay).  However, the mechanism is
   slightly adapted to fit better.</p>

<p>Servers MUST keep track of all such channels which lose members as
   the result of a network split, no matter whether the user is a
   &#8220;channel operator&#8221; or not.</p>

<p>However, these channels do NOT ever become unavailable, it is always
   possible to join them even when they are empty.</p>

<p>Kalt                         Informational                     [Page 12]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>5.2.3 Abuse Window</p>

<p>Because the periodicity is so long, attacks on a particular channel
   (name) may only occur once in a very long while.  However, with luck
   and patience, it is still possible for a user to cause a channel
   collision.  In order to avoid this, servers MUST &#8220;look in the future&#8221;
   and keep a list of channel names which identifier is about to be used
   (in the coming few days for example). Such list should remain small,
   not be a burden for servers to maintain and be used to avoid channel
   collisions by preventing the re-creation of such channel for a longer
   period of time than channel delay does.</p>

<p>Eventually a server MAY choose to extend this procedure to forbid
   creation of channels with the same shortname only (then ignoring the
   channel identifier).</p>

<p>5.2.4 Preserving Sanity In The Name Space</p>

<p>The combination of the mechanisms described in sections 5.2.2 and
   5.2.3 makes it quite difficult for a user to create a channel
   collision. However, another type of abuse consists of creating many
   channels having the same shortname, but different identifiers.  To
   prevent this from happening, servers MUST forbid the creation of a
   new channel which has the same shortname of a channel currently
   existing.</p>

<p>5.2.5 Server Reop Mechanism</p>

<p>When a channel has been opless for longer than the &#8220;reop delay&#8221;
   period and has the channel flag &#8216;r&#8217; set (See Section 4.2.7 (Server
   Reop Flag)), IRC servers are responsible for giving the channel
   operator status randomly to some of the members.</p>

<p>The exact logic used for this mechanism by the current implementation
   is described below.  Servers MAY use a different logic, but that it
   is strongly RECOMMENDED that all servers use the same logic on a
   particular IRC network to maintain coherence as well as fairness.
   For the same reason, the &#8220;reop delay&#8221; SHOULD be uniform on all
   servers for a given IRC network.  As for the &#8220;channel delay&#8221;, the
   value of the &#8220;reop delay&#8221; SHOULD be set considering many factors
   among which are the size (user wise) of the IRC network, and the
   usual duration of network splits.</p>

<p>a) the reop mechanism is triggered after a random time following the
      expiration of the &#8220;reop delay&#8221;.  This should limit the eventuality
      of the mechanism being triggered at the same time (for the same
      channel) on two separate servers.</p>

<p>Kalt                         Informational                     [Page 13]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>b) If the channel is small (five (5) users or less), and the &#8220;channel
      delay&#8221; for this channel has expired,
        Then reop all channel members if at least one member is local to
        the server.</p>

<p>c) If the channel is small (five (5) users or less), and the &#8220;channel
      delay&#8221; for this channel has expired, and the &#8220;reop delay&#8221; has
      expired for longer than its value,
        Then reop all channel members.</p>

<p>d) For other cases, reop at most one member on the channel, based on
      some method build into the server. If you don&#8217;t reop a member, the
      method should be such that another server will probably op
      someone. The method SHOULD be the same over the whole network. A
      good heuristic could be just random reop.
      (The current implementation actually tries to choose a member
      local to the server who has not been idle for too long, eventually
      postponing action, therefore letting other servers have a chance
      to find a &#8220;not too idle&#8221; member.  This is over complicated due to
      the fact that servers only know the &#8220;idle&#8221; time of their local
      users)</p>

<ol>
<li><p>Current problems</p>

<p>There are a number of recognized problems with the way IRC channels
are managed.  Some of these can be directly attributed to the rules
defined in this document, while others are the result of the
underlying &#8220;IRC Server Protocol&#8221; [IRC-SERVER].  Although derived from
RFC 1459 [IRC], this document introduces several novelties in an
attempt to solve some of the known problems.</p></li>
</ol>

<p>6.1 Labels</p>

<p>This document defines one of the many labels used by the IRC
   protocol.  Although there are several distinct namespaces (based on
   the channel name prefix), duplicates inside each of these are not
   allowed.  Currently, it is possible for users on different servers to
   pick the label which may result in collisions (with the exception of
   channels known to only one server where they can be averted).</p>

<p>6.1.1 Channel Delay</p>

<p>The channel delay mechanism described in section 5.1 (Tracking
   Recently Used Channels) and used for channels prefixed with the
   character &#8216;#&#8217; is a simple attempt at preventing collisions from
   happening.  Experience has shown that, under normal circumstances, it</p>

<p>Kalt                         Informational                     [Page 14]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>is very efficient; however, it obviously has severe limitations
   keeping it from being an adequate solution to the problem discussed
   here.</p>

<p>6.1.2 Safe Channels</p>

<p>&#8220;Safe channels&#8221; described in section 3.2 (Safe Channels) are a better
   way to prevent collisions from happening as it prevents users from
   having total control over the label they choose.  The obvious
   drawback for such labels is that they are not user friendly.
   However, it is fairly trivial for a client program to improve on
   this.</p>

<p>6.2 Mode Propagation Delays</p>

<p>Because of network delays induced by the network, and because each
   server on the path is REQUIRED to check the validity of mode changes
   (e.g., user exists and has the right privileges), it is not unusual
   for a MODE message to only affect part of the network, often creating
   a discrepancy between servers on the current state of a channel.</p>

<p>While this may seem easy to fix (by having only the original server
   check the validity of mode changes), it was decided not to do so for
   various reasons.  One concern is that servers cannot trust each
   other, and that a misbehaving servers can easily be detected.  This
   way of doing so also stops wave effects on channels which are out of
   synch when mode changes are issued from different directions.</p>

<p>6.3 Collisions And Channel Modes</p>

<p>The &#8220;Internet Relay Chat: Server Protocol&#8221; document [IRC-SERVER]
   describes how channel data is exchanged when two servers connect to
   each other.  Channel collisions (either legitimate or not) are
   treated as inclusive events, meaning that the resulting channel has
   for members all the users who are members of the channel on either
   server prior to the connection.</p>

<p>Similarly, each server sends the channel modes to the other one.
   Therefore, each server also receives these channel modes.  There are
   three types of modes for a given channel: flags, masks, and data.
   The first two types are easy to deal with as they are either set or
   unset.  If such a mode is set on one server, it MUST be set on the
   other server as a result of the connection.</p>

<p>Kalt                         Informational                     [Page 15]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>As topics are not sent as part of this exchange, they are not a
   problem.  However, channel modes &#8216;l&#8217; and &#8216;k&#8217; are exchanged, and if
   they are set on both servers prior to the connection, there is no
   mechanism to decide which of the two values takes precedence.  It is
   left up to the users to fix the resulting discrepancy.</p>

<p>6.4 Resource Exhaustion</p>

<p>The mode based on masks defined in section 4.3 make the IRC servers
   (and network) vulnerable to a simple abuse of the system: a single
   channel operator can set as many different masks as possible on a
   particular channel.  This can easily cause the server to waste
   memory, as well as network bandwidth (since the info is propagated to
   other servers).  For this reason it is RECOMMENDED that a limit be
   put on the number of such masks per channels as mentioned in section
   4.3.</p>

<p>Moreover, more complex mechanisms MAY be used to avoid having
   redundant masks set for the same channel.</p>

<ol>
<li>Security Considerations</li>
</ol>

<p>7.1 Access Control</p>

<p>One of the main ways to control access to a channel is to use masks
   which are based on the username and hostname of the user connections.
   This mechanism can only be efficient and safe if the IRC servers have
   an accurate way of authenticating user connections, and if users
   cannot easily get around it.  While it is in theory possible to
   implement such a strict authentication mechanism, most IRC networks
   (especially public networks) do not have anything like this in place
   and provide little guaranty about the accuracy of the username and
   hostname for a particular client connection.</p>

<p>Another way to control access is to use a channel key, but since this
   key is sent in plaintext, it is vulnerable to traditional man in the
   middle attacks.</p>

<p>7.2 Channel Privacy</p>

<p>Because channel collisions are treated as inclusive events (See
   Section 6.3), it is possible for users to join a channel overriding
   its access control settings.  This method has long been used by
   individuals to &#8220;take over&#8221; channels by &#8220;illegitimately&#8221; gaining
   channel operator status on the channel.  The same method can be used
   to find out the exact list of members of a channel, as well as to
   eventually receive some of the messages sent to the channel.</p>

<p>Kalt                         Informational                     [Page 16]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<p>7.3 Anonymity</p>

<p>The anonymous channel flag (See Section 4.2.1) can be used to render
   all users on such channel &#8220;anonymous&#8221; by presenting all messages to
   the channel as originating from a pseudo user which nickname is
   &#8220;anonymous&#8221;.  This is done at the client-server level, and no
   anonymity is provided at the server-server level.</p>

<p>It should be obvious to readers, that the level of anonymity offered
   is quite poor and insecure, and that clients SHOULD display strong
   warnings for users joining such channels.</p>

<ol>
<li><p>Current support and availability</p>

<p>Mailing lists for IRC related discussion:
   General discussion: ircd-users@irc.org
   Protocol development: ircd-dev@irc.org</p>

<p>Software implementations:
   ftp://ftp.irc.org/irc/server
   ftp://ftp.funet.fi/pub/unix/irc
   ftp://coombs.anu.edu.au/pub/irc</p>

<p>Newsgroup: alt.irc</p></li>
<li><p>Acknowledgements</p>

<p>Parts of this document were copied from the RFC 1459 [IRC] which
first formally documented the IRC Protocol.  It has also benefited
from many rounds of review and comments.  In particular, the
following people have made significant contributions to this
document:</p>

<p>Matthew Green, Michael Neumayer, Volker Paulsen, Kurt Roeckx, Vesa
Ruokonen, Magnus Tjernstrom, Stefan Zehl.</p></li>
</ol>

<p>Kalt                         Informational                     [Page 17]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<ol>
<li><p>References</p>

<p>[KEYWORDS]   Bradner, S., &#8220;Key words for use in RFCs to Indicate
            Requirement Levels&#8221;, BCP 14, RFC 2119, March 1997.</p>

<p>[IRC]        Oikarinen, J. and D. Reed, &#8220;Internet Relay Chat
            Protocol&#8221;, RFC 1459, May 1993.</p>

<p>[IRC-ARCH]   Kalt, C., &#8220;Internet Relay Chat: Architecture&#8221;, RFC 2810,
            April 2000.</p>

<p>[IRC-CLIENT] Kalt, C., &#8220;Internet Relay Chat: Client Protocol&#8221;, RFC
            2812, April 2000.</p>

<p>[IRC-SERVER] Kalt, C., &#8220;Internet Relay Chat: Server Protocol&#8221;, RFC
            2813, April 2000.</p></li>
<li><p>Author&#8217;s Address</p>

<p>Christophe Kalt
99 Teaneck Rd, Apt #117
Ridgefield Park, NJ 07660
USA</p>

<p>EMail: kalt@stealth.net</p></li>
</ol>

<p>Kalt                         Informational                     [Page 18]

RFC 2811        Internet Relay Chat: Channel Management       April 2000</p>

<ol>
<li><p>Full Copyright Statement</p>

<p>Copyright (C) The Internet Society (2000).  All Rights Reserved.</p>

<p>This document and translations of it may be copied and furnished to
others, and derivative works that comment on or otherwise explain it
or assist in its implementation may be prepared, copied, published
and distributed, in whole or in part, without restriction of any
kind, provided that the above copyright notice and this paragraph are
included on all such copies and derivative works.  However, this
document itself may not be modified in any way, such as by removing
the copyright notice or references to the Internet Society or other
Internet organizations, except as needed for the purpose of
developing Internet standards in which case the procedures for
copyrights defined in the Internet Standards process must be
followed, or as required to translate it into languages other than
English.</p>

<p>The limited permissions granted above are perpetual and will not be
revoked by the Internet Society or its successors or assigns.</p>

<p>This document and the information contained herein is provided on an
&#8220;AS IS&#8221; basis and THE INTERNET SOCIETY AND THE INTERNET ENGINEERING
TASK FORCE DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING
BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION
HEREIN WILL NOT INFRINGE ANY RIGHTS OR ANY IMPLIED WARRANTIES OF
MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.</p></li>
</ol>

<p>Acknowledgement</p>

<p>Funding for the RFC Editor function is currently provided by the
   Internet Society.</p>

<p>Kalt                         Informational                     [Page 19]
</p>

                            </div>
        
        <footer>

                        <p>All documents &copy; irchelp.org or original authors 2013 <br />Baked with <em><a href="http://bolt80.com/piecrust/">PieCrust</a> 1.3.0-dev</em>.</p>
                    </footer>
    </div>
    
        <!-- Le javascript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="/js/jquery.js"></script>
    <script src="/js/bootstrap-transition.js"></script>
    <script src="/js/bootstrap-alert.js"></script>
    <script src="/js/bootstrap-modal.js"></script>
    <script src="/js/bootstrap-dropdown.js"></script>
    <script src="/js/bootstrap-scrollspy.js"></script>
    <script src="/js/bootstrap-tab.js"></script>
    <script src="/js/bootstrap-tooltip.js"></script>
    <script src="/js/bootstrap-popover.js"></script>
    <script src="/js/bootstrap-button.js"></script>
    <script src="/js/bootstrap-collapse.js"></script>
    <script src="/js/bootstrap-carousel.js"></script>
    <script src="/js/bootstrap-typeahead.js"></script>
</body>
</html>
